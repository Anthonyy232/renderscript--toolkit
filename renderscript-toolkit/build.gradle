plugins {
    id 'com.android.library'
    id 'kotlin-android'
    id 'maven-publish'
    id 'signing'
}

group = 'io.github.anthonyy232'
version = '1.0.0'

android {
    namespace = 'com.example.renderscripttoolkit'
    compileSdkVersion 35

    publishing {
        singleVariant('release') {
            withSourcesJar()
        }
    }

    defaultConfig {
        minSdk = 21
        consumerProguardFiles 'consumer-rules.pro'
        testInstrumentationRunner = 'androidx.test.runner.AndroidJUnitRunner'
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility = JavaVersion.VERSION_17
        targetCompatibility = JavaVersion.VERSION_17
    }

    kotlinOptions {
        jvmTarget = '17'
    }
}

dependencies {
    implementation 'androidx.core:core-ktx:1.16.0'
    implementation 'androidx.appcompat:appcompat:1.7.1'

    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.3.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.7.0'
}

afterEvaluate {
    publishing {
        publications {
            release(MavenPublication) {
                from components.release

                pom {
                    name = 'RenderScriptToolkit'
                    description = 'Forked Android RenderScript toolkit with updated dependencies'
                    url = 'https://github.com/Anthonyy232/renderscript-toolkit'

                    licenses {
                        license {
                            name = 'The Apache License, Version 2.0'
                            url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                        }
                    }

                    developers {
                        developer {
                            id = 'anthonyy232'
                            name = 'Anthony La'
                            email = 'anthonyyla.dev@gmail.com'
                        }
                    }

                    scm {
                        connection = 'scm:git:git://github.com/Anthonyy232/renderscript-toolkit.git'
                        developerConnection = 'scm:git:ssh://github.com/Anthonyy232/renderscript-toolkit.git'
                        url = 'https://github.com/Anthonyy232/renderscript-toolkit'
                    }
                }
            }
        }

        repositories {
            maven {
                name = 'MavenCentral'
                url = 'https://ossrh-staging-api.central.sonatype.com/service/local/staging/deploy/maven2/'
                credentials {
                    username = findProperty('ossrhUsername') as String
                    password = findProperty('ossrhPassword') as String
                }
            }
        }
    }
}

signing {
    // The signing plugin will automatically read the signing properties from your
    // gradle.properties file. It will only activate if they are present.
    // It will automatically sign all publications defined in the publishing {} block.
    useGpgCmd()
    sign(publishing.publications)
}